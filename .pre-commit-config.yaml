# Optimized pre-commit configuration for Glance
# Performance-optimized configuration

repos:
  # Standard file formatting hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      # General file formatting hooks - only run on relevant files
      - id: trailing-whitespace
        name: Remove trailing whitespace
        description: This hook removes trailing whitespace from all files
        args: [--markdown-linebreak-ext=md]
        exclude: '^vendor/|^\.git/'

      - id: end-of-file-fixer
        name: Fix end of files
        description: Ensures files end with a newline
        exclude: '^vendor/|^\.git/'

      - id: mixed-line-ending
        name: Normalize line endings
        description: Replaces line endings with the UNIX 'LF' line endings
        args: [--fix=lf]
        exclude: '^vendor/|^\.git/'

      - id: check-yaml
        name: Check YAML syntax
        description: Validates all YAML files
        exclude: '^vendor/|^\.git/|^precommit-tests/test_invalid_yaml.yaml$'

      - id: check-json
        name: Check JSON syntax
        description: Validates all JSON files
        exclude: '^vendor/|^\.git/|^precommit-tests/test_invalid_json.json$|package-lock.json'

      - id: check-merge-conflict
        name: Check for merge conflicts
        description: Ensures merge conflict strings are not included in source
        exclude: '^vendor/|^\.git/|^precommit-tests/test_merge_conflict.txt$'

      - id: check-executables-have-shebangs
        name: Check executables
        description: Ensures all executables have shebangs
        exclude: '^vendor/'

      - id: pretty-format-json
        name: Format JSON files
        description: Formats JSON files consistently
        args: [--autofix, --no-sort-keys]
        exclude: '^vendor/|^\.git/|^precommit-tests/test_invalid_json.json$|package-lock.json'

      # File size limitation hooks - skip test files
      - id: check-added-large-files
        name: Check for large files
        description: Prevents committing files larger than 5MB
        args: [--maxkb=5120]  # 5MB = 5120KB
        exclude: '^precommit-tests/test_large_file.txt$|^vendor/'

      - id: check-case-conflict
        name: Check for case conflicts
        description: Checks for files with names that would conflict on a case-insensitive filesystem
        exclude: '^precommit-tests/CaseConflict.txt$|^vendor/'

  # Go-specific hooks
  - repo: https://github.com/dnephin/pre-commit-golang
    rev: v0.5.1
    hooks:
      # Go formatting hooks - use system commands directly for speed
      # and only run on staged Go files
      - id: go-fmt
        name: go fmt
        description: Run gofmt on files
        entry: gofmt
        language: system
        pass_filenames: true
        types: [go]
        exclude: '^vendor/|^precommit-tests/test_go_fmt.go$'

      - id: go-imports
        name: go imports
        description: Run goimports on files
        entry: goimports
        language: system
        pass_filenames: true
        types: [go]
        args: ["-w", "-local", "github.com/phrazzld/glance"]
        exclude: '^vendor/|^precommit-tests/test_go_imports.go$'

      # Go code analysis hooks
      - id: go-vet
        name: go vet
        description: Run go vet on packages to analyze code for suspicious constructs
        entry: go vet
        language: system
        pass_filenames: false
        types: [go]
        args: ["./..."]
        exclude: '^vendor/|^precommit-tests/'

      # Go test hooks
      - id: go-unit-tests
        name: go test
        description: Run Go unit tests
        entry: go test
        language: system
        types: [go]
        pass_filenames: false
        args: ["-race", "./..."]
        exclude: '^vendor/|^precommit-tests/'

      - id: go-mod-tidy
        name: go mod tidy
        description: Run go mod tidy to ensure go.mod is up to date
        entry: go mod tidy
        language: system
        pass_filenames: false

      - id: go-build
        name: go build
        description: Ensure code compiles without errors
        entry: go build
        language: system
        types: [go]
        pass_filenames: false
        args: ["-o", "/dev/null", "./..."]
        exclude: '^vendor/|^precommit-tests/'

  # NOTE: We have standardized on golangci-lint v2.1.2 across all platforms
  # This is the definitive version used in both pre-commit and CI workflows
  # Any version changes should be synchronized between:
  # 1. This file (rev: field below)
  # 2. .github/workflows/lint.yml (version parameter in golangci-lint-action)
  # 3. Documentation in docs/LINTING.md and other relevant docs

  # The hook is currently commented out but will be re-enabled in T035
  # - repo: https://github.com/golangci/golangci-lint
  #   rev: v2.1.2  # Definitive version - all other golangci-lint versions should match this
  #   hooks:
  #     - id: golangci-lint
  #       name: golangci-lint
  #       description: Fast Go linters runner that uses .golangci.yml config
  #       entry: golangci-lint run
  #       types: [go]
  #       language: golang  # Better reproducibility as pre-commit manages the installation
  #       pass_filenames: false
  #       args: ["--config=.golangci.yml", "--timeout=2m"]  # timeout must match the setting in .golangci.yml
  #       exclude: '^vendor/|^precommit-tests/'

  # Security-focused hooks - skip test files
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: detect-private-key
        name: Detect private keys
        description: Checks for the existence of private keys in committed files
        exclude: '^precommit-tests/test_private_key.txt$|^vendor/'

      - id: no-commit-to-branch
        name: Prevent commits to main branch
        description: Prevents direct commits to the main branch
        args: [--branch, main, --branch, master]

  # Optimized secrets detection
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        name: Detect secrets
        description: Detects secrets and credentials in code to prevent accidental commits
        args: ['--baseline', '.secrets.baseline']
        exclude: |
          (?x)^(
            .*/test-fixtures/.*|
            .*_test.go|
            .*/tests/.*|
            .*/testdata/.*|
            .*\.md|
            \.pre-commit-config\.yaml|
            ^precommit-tests/.*
          )$
