# Basic pre-commit configuration for Glance
# This file defines the structure for pre-commit hooks

repos:
  # Standard file formatting hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      # General file formatting hooks
      - id: trailing-whitespace
        name: Remove trailing whitespace
        description: This hook removes trailing whitespace from all files
        args: [--markdown-linebreak-ext=md]
        
      - id: end-of-file-fixer
        name: Fix end of files
        description: Ensures files end with a newline
        
      - id: mixed-line-ending
        name: Normalize line endings
        description: Replaces line endings with the UNIX 'LF' line endings
        args: [--fix=lf]
        
      - id: check-yaml
        name: Check YAML syntax
        description: Validates all YAML files
        
      - id: check-json
        name: Check JSON syntax
        description: Validates all JSON files
        
      - id: check-merge-conflict
        name: Check for merge conflicts
        description: Ensures merge conflict strings are not included in source
        
      - id: check-executables-have-shebangs
        name: Check executables
        description: Ensures all executables have shebangs

      - id: pretty-format-json
        name: Format JSON files
        description: Formats JSON files consistently
        args: [--autofix, --no-sort-keys]
        exclude: package-lock.json
        
      # File size limitation hooks
      - id: check-added-large-files
        name: Check for large files
        description: Prevents committing files larger than 5MB
        args: [--maxkb=5120]  # 5MB = 5120KB
        
      - id: check-case-conflict
        name: Check for case conflicts
        description: Checks for files with names that would conflict on a case-insensitive filesystem

  # Go-specific hooks
  - repo: https://github.com/dnephin/pre-commit-golang
    rev: v0.5.1
    hooks:
      # Go formatting hooks
      - id: go-fmt
        name: go fmt
        description: Run gofmt on files
        language: system
        pass_filenames: true
        files: \.go$
      - id: go-imports
        name: go imports
        description: Run goimports on files
        language: system
        pass_filenames: true
        files: \.go$
        args: ["-w", "-local", "github.com/phrazzld/glance"]
      
      # Go code analysis hooks
      - id: go-vet
        name: go vet
        description: Run go vet on packages to analyze code for suspicious constructs
        language: system
        pass_filenames: false
        files: \.go$
        args: ["./..."]
        verbose: true
        
      # Go linting hooks from dnephin repo
      - id: golangci-lint
        name: go-repo linter
        description: Run golangci-lint through the pre-commit-golang repo
        args: ["--config=.golangci.yml", "--new-from-rev=HEAD~1"]
        
      # Go test hooks
      - id: go-unit-tests
        name: go test
        description: Run Go unit tests
        language: system
        files: \.go$
        pass_filenames: false
        args: ["-race", "-v", "./..."]
        
      - id: go-mod-tidy
        name: go mod tidy
        description: Run go mod tidy to ensure go.mod is up to date
        language: system
        pass_filenames: false
        
      - id: go-build
        name: go build
        description: Ensure code compiles without errors
        language: system
        files: \.go$
        pass_filenames: false
        args: ["-o", "/dev/null", "./..."]

  # Linting hooks
  - repo: https://github.com/golangci/golangci-lint
    rev: v1.57.0
    hooks:
      - id: golangci-lint
        name: golangci-lint
        description: Fast Go linters runner that uses .golangci.yml config
        language: system
        entry: golangci-lint run
        types: [go]
        pass_filenames: false
        args: ["--fix", "--timeout=5m"]
        verbose: true

  # Security-focused hooks
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      # Placeholder for security hooks
      - id: detect-secrets