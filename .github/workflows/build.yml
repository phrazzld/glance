name: Go Build

# Trigger configuration:
# - On push to master branch (ignoring documentation changes)
# - On pull requests to master branch
on:
  push:
    branches: [master]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - 'LICENSE'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/PULL_REQUEST_TEMPLATE.md'
  pull_request:
    branches: [master]

# Prevent multiple identical workflow runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build on ${{ matrix.os }} / Go ${{ matrix.go-version }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5
    strategy:
      fail-fast: false
      matrix:
        go-version: ['1.23', '1.24']
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Get dependencies
        run: go mod download

      - name: Build binary
        run: |
          # Set output filename based on OS
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            go build -v -o "glance.exe" -ldflags="-s -w" .
          else
            go build -v -o "glance" -ldflags="-s -w" .
          fi

      - name: Verify binary exists
        if: runner.os == 'Windows'
        run: if (-Not (Test-Path "glance.exe")) { exit 1 }

      - name: Verify binary exists
        if: runner.os != 'Windows'
        run: if [ ! -f "glance" ]; then exit 1; fi

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: glance-${{ matrix.os }}-go${{ matrix.go-version }}
          path: |
            glance
            glance.exe
          if-no-files-found: ignore # Some combinations won't produce both files
